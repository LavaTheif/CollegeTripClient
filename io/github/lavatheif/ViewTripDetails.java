/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package io.github.lavatheif;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Arrays;
import java.util.HashMap;

/**
 *
 * @author Charlie
 */
public class ViewTripDetails extends javax.swing.JFrame {
    private HashMap<String, String> store;
    private String tripID, financePath, letterPath, riskPath;
    
    /**
     * Creates new form Window
     */
    public ViewTripDetails(String id) {
        tripID = id;
        HashMap<String, String> jsonData = new HashMap<>();
        jsonData.put("request", "get trip");
        jsonData.put("trip-id", id);
        
        if(CollegeTripPlanner.viewDetails!=null)
            CollegeTripPlanner.viewDetails.dispose();
        CollegeTripPlanner.viewDetails = this;
        Utils.contactServer(jsonData, 1);
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewTripDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewTripDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewTripDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewTripDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                initComponents();
                setVisible(true);
                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                setLocationRelativeTo(null);
                edit.setEnabled(false);
                denyReason.setEnabled(false);
            }
        }); 
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        location = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        day = new javax.swing.JTextField();
        timeStartHour = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        purpose = new javax.swing.JTextArea();
        totalStudents = new javax.swing.JTextField();
        leader = new javax.swing.JTextField();
        staff1 = new javax.swing.JTextField();
        staff2 = new javax.swing.JTextField();
        staff3 = new javax.swing.JTextField();
        transport_other = new javax.swing.JTextField();
        cost = new javax.swing.JTextField();
        edit = new javax.swing.JButton();
        endTime = new javax.swing.JPanel();
        timeEndHour = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        resdential = new javax.swing.JCheckBox();
        errMsg = new javax.swing.JLabel();
        download = new javax.swing.JButton();
        deny = new javax.swing.JButton();
        accept = new javax.swing.JButton();
        denyReason = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        group = new javax.swing.JTextField();
        transport = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Woking College Trip Planner");
        setBackground(new java.awt.Color(255, 255, 215));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 620));

        jPanel2.setBackground(new java.awt.Color(255, 255, 215));
        jPanel2.setForeground(new java.awt.Color(255, 255, 215));
        jPanel2.setToolTipText("");

        jPanel1.setBackground(new java.awt.Color(163, 226, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Trip details shown below"));

        jLabel6.setText("Purpose of trip");

        jLabel7.setText("How many students are going?");

        jLabel8.setText("Staff Members Attending");

        jLabel9.setText("Mode of Transport");

        jLabel10.setText("Total Trip Cost  Â£");

        jLabel2.setText("Location");

        jLabel3.setText("Address");

        jLabel4.setText("Date");

        jLabel5.setText("Time");

        location.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        location.setEnabled(false);

        address.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        address.setEnabled(false);

        day.setEnabled(false);

        timeStartHour.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        timeStartHour.setText("00");
        timeStartHour.setEnabled(false);

        purpose.setColumns(20);
        purpose.setRows(5);
        purpose.setEnabled(false);
        jScrollPane1.setViewportView(purpose);

        totalStudents.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        totalStudents.setEnabled(false);

        leader.setToolTipText("Party Leader");
        leader.setEnabled(false);

        staff1.setToolTipText("Other Staff");
        staff1.setEnabled(false);

        staff2.setToolTipText("Other Staff");
        staff2.setEnabled(false);

        staff3.setToolTipText("Other Staff");
        staff3.setEnabled(false);

        transport_other.setEnabled(false);

        cost.setToolTipText("Cost");
        cost.setEnabled(false);

        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        endTime.setBackground(new java.awt.Color(163, 226, 255));

        timeEndHour.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        timeEndHour.setText("00");
        timeEndHour.setEnabled(false);

        jLabel14.setText("-");

        resdential.setText("Residential Trip?");
        resdential.setEnabled(false);

        javax.swing.GroupLayout endTimeLayout = new javax.swing.GroupLayout(endTime);
        endTime.setLayout(endTimeLayout);
        endTimeLayout.setHorizontalGroup(
            endTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(endTimeLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(timeEndHour, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(resdential)
                .addContainerGap())
        );
        endTimeLayout.setVerticalGroup(
            endTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, endTimeLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(endTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(timeEndHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resdential)))
        );

        errMsg.setForeground(new java.awt.Color(204, 0, 0));

        download.setText("Download Files");
        download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadActionPerformed(evt);
            }
        });

        deny.setText("Deny Trip");
        deny.setEnabled(false);
        deny.setHideActionText(true);
        deny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                denyActionPerformed(evt);
            }
        });

        accept.setText("Accept Trip");
        accept.setEnabled(false);
        accept.setHideActionText(true);
        accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptActionPerformed(evt);
            }
        });

        denyReason.setText("Reason to Deny Trip.");
        denyReason.setEnabled(false);

        jLabel11.setText("Group");

        group.setEnabled(false);

        transport.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Car", "Bus", "Train", "Coach", "Walk", "Plane", "Boat", "Other" }));
        transport.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(errMsg, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                                        .addGap(242, 242, 242))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(download)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(denyReason)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(accept)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deny)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(edit))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(totalStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(transport, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(transport_other, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(staff3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(leader, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(staff2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(staff1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel10)
                                .addGap(7, 7, 7)
                                .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(group, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(18, 18, 18)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel5))
                                                    .addGap(18, 18, 18))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel4)
                                                    .addGap(35, 35, 35)))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(location, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                                                    .addComponent(address)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(timeStartHour, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(endTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(timeStartHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(endTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(group, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(totalStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(leader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(staff1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(staff2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(staff3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(transport_other, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(transport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                        .addComponent(errMsg))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edit)
                            .addComponent(deny)
                            .addComponent(accept)
                            .addComponent(download))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(denyReason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Woking College Trip Planner");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void addData(HashMap<String, String> data){
        store = data;

        boolean isResi = data.get("is_residential").equalsIgnoreCase("true");
        
        address.setText(data.get("address").replace("-",", "));
        location.setText(data.get("location"));
        day.setText(data.get("date_start"));
        timeStartHour.setText(data.get("time_start"));
        timeEndHour.setText(data.get("end")+(isResi?" days long":""));
        resdential.setSelected(isResi);
        purpose.setText(data.get("purpose"));
        group.setText(data.get("groups"));
        totalStudents.setText(data.get("max_students"));
        financePath = data.get("finance_report");
        letterPath = data.get("parent_letter");
        riskPath = data.get("risk_assessment");
        
        String[] s = data.get("staff").split(",");
        if(s.length > 0)
            leader.setText(s[0]);
        if(s.length > 1)
            staff1.setText(s[1]);
        if(s.length > 2)
            staff2.setText(s[2]);
        if(s.length > 3)
            staff3.setText(s[3]);

       String trans = data.get("transport");
        if(trans.contains("__")){
            transport_other.setText(trans.replace("__",""));
            transport.setSelectedItem("Other");
        }else{
            transport.setSelectedItem(trans);
        }

        cost.setText(data.get("cost"));
        
        //trip can only be edited if nobody has accepted it yet.
        //: check on the server that trip has no accpets.
        //: if a user denies the trip, set the accepts to 0. -- reason must be given.
        //: if a user accpets the trip, dont let them accept it again unless it is denied.
        
        if(data.get("approved") != null){
            if(data.get("approved").equalsIgnoreCase("true")){
                dataInvalid("This trip has been approved by the Principal.");
                return;
            }//Trip been approved by brett, dont let people deny it.
        }
        
        if(!data.get("initial_approvals").equals("") && !data.get("initial_approvals").equals("null"))
            dataInvalid("This is in the process of being approved.");

        if(data.get("creator").equals(Utils.ID)){
            if(data.get("initial_approvals").equals("") || data.get("initial_approvals").equals("null")){
                edit.setEnabled(true);
            }else{
                edit.setEnabled(false);
            }
        }
        if(Utils.isAdmin){
            if(!Arrays.asList(data.get("initial_approvals").split(",")).contains(Utils.ID))
                accept.setEnabled(true);//can only accept if not accepted
            else
                dataInvalid("Note.  You have already accepted this trip.");//let them know the trip is accepted
            deny.setEnabled(true);
            denyReason.setEnabled(true);
        }
        
    }
    
    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        //: edit trip
        //forwards to trip details screen.
        dispose();
        CollegeTripPlanner.mainMenu.hide();
        Utils.tripID = tripID;
        Utils.screen = 1;
        CollegeTripPlanner.details = new TripDetailsScreen();
        CollegeTripPlanner.details.addData(store);
    }//GEN-LAST:event_editActionPerformed

    private void downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadActionPerformed
        //  add your handling code here:
        HashMap<String, String> data = new HashMap<>();
        data.put("trip-id", tripID);
        data.put("request", "file download");
        
        Utils.contactServer(data, 4);
    }//GEN-LAST:event_downloadActionPerformed

    public void downloadFiles(HashMap<String, String> data){
        dataInvalid("Downloading files...");
        File dir = new File("C:/Users/"+System.getProperty("user.name")+"/Documents/trip-data/"+data.get("trip-id"));
        try{
            
            if(!dir.exists())
                dir.mkdirs();
            
            FileOutputStream fos = null;
            BufferedOutputStream bos = null;
            
            if(!(""+financePath).equalsIgnoreCase("null")){
                
                String financeOutputPath = dir+"/finance_report_download." + financePath;
                System.out.println("");
                System.out.println(financeOutputPath);
                Object financeBlob = data.get("finance");
                String financeString = financeBlob.toString();
                financeString = financeString.replace("[", "");
                financeString = financeString.replace("]", "");
                financeString = financeString.replace(" ", "");
                String[] financeStringArray = financeString.split(",");
                byte[] financeByteArray = new byte[financeStringArray.length];
                for(int i = 0;i<financeStringArray.length;i++){
                    financeByteArray[i] = Byte.parseByte(Integer.toString((int) Float.parseFloat(financeStringArray[i])));
                }
            
                fos = new FileOutputStream(financeOutputPath);
                bos = new BufferedOutputStream(fos);
		bos.write(financeByteArray, 0 , financeByteArray.length);
		bos.flush();
                bos.close();
                fos.close();
            }
            if(!(""+letterPath).equalsIgnoreCase("null")){
                
                String letterOutputPath = dir+"/parents_letter_download." + letterPath;
                System.out.println("");
                System.out.println(letterOutputPath);
                Object letterBlob = data.get("letter");
                String letterString = letterBlob.toString();
                letterString = letterString.replace("[", "");
                letterString = letterString.replace("]", "");
                letterString = letterString.replace(" ", "");
                String[] letterStringArray = letterString.split(",");
                byte[] letterByteArray = new byte[letterStringArray.length];
                for(int i = 0;i<letterStringArray.length;i++){
                    letterByteArray[i] = Byte.parseByte(Integer.toString((int) Float.parseFloat(letterStringArray[i])));
                }
            
                fos = new FileOutputStream(letterOutputPath);
                bos = new BufferedOutputStream(fos);
		bos.write(letterByteArray, 0 , letterByteArray.length);
		bos.flush();
                bos.close();
                fos.close();
            }
            if(!(""+riskPath).equalsIgnoreCase("null")){
                
                String riskOutputPath = dir+"/risk_assessment_download." + riskPath;
                System.out.println("");
                System.out.println(riskOutputPath);
                Object riskBlob = data.get("risks");
                String riskString = riskBlob.toString();
                riskString = riskString.replace("[", "");
                riskString = riskString.replace("]", "");
                riskString = riskString.replace(" ", "");
                String[] riskStringArray = riskString.split(",");
                byte[] riskByteArray = new byte[riskStringArray.length];
                for(int i = 0;i<riskStringArray.length;i++){
                    riskByteArray[i] = Byte.parseByte(Integer.toString((int) Float.parseFloat(riskStringArray[i])));
                }
            
                fos = new FileOutputStream(riskOutputPath);
                bos = new BufferedOutputStream(fos);
		bos.write(riskByteArray, 0 , riskByteArray.length);
		bos.flush();
                bos.close();
                fos.close();
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        try{
            Runtime.getRuntime().exec("explorer.exe /select," + dir.getAbsolutePath()+"\\");
            dataInvalid("Files Downloaded.");
        }catch(Exception e){
            dataInvalid("Files Downloaded to "+dir);            
        }

        //String[] financeStringArray = financeBlob.split(",");
    }
    
    private void acceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptActionPerformed
        HashMap<String, String> data = new HashMap<>();
        data.put("trip-ID", tripID);
        data.put("request", "accept");
        
        Utils.contactServer(data, 2);
    }//GEN-LAST:event_acceptActionPerformed

    private void denyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_denyActionPerformed
        HashMap<String, String> data = new HashMap<>();
        data.put("trip-ID", tripID);
        data.put("request", "deny");
        data.put("reason", denyReason.getText());
        
        Utils.contactServer(data, 3);
    }//GEN-LAST:event_denyActionPerformed
    
    public void tripAccepted(){
        dataInvalid("Trip Accepted successfully!");
        accept.setEnabled(false);
        edit.setEnabled(false);
   }
    
    
    void tripDenied() {
        dataInvalid("Trip denied successfully!");
        accept.setEnabled(true);
        
    }
    
    public void dataInvalid(String err){
        errMsg.setText(err);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accept;
    private javax.swing.JTextField address;
    private javax.swing.JTextField cost;
    private javax.swing.JTextField day;
    private javax.swing.JButton deny;
    private javax.swing.JTextField denyReason;
    private javax.swing.JButton download;
    private javax.swing.JButton edit;
    private javax.swing.JPanel endTime;
    private javax.swing.JLabel errMsg;
    private javax.swing.JTextField group;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField leader;
    private javax.swing.JTextField location;
    private javax.swing.JTextArea purpose;
    private javax.swing.JCheckBox resdential;
    private javax.swing.JTextField staff1;
    private javax.swing.JTextField staff2;
    private javax.swing.JTextField staff3;
    private javax.swing.JTextField timeEndHour;
    private javax.swing.JTextField timeStartHour;
    private javax.swing.JTextField totalStudents;
    private javax.swing.JComboBox<String> transport;
    private javax.swing.JTextField transport_other;
    // End of variables declaration//GEN-END:variables
}